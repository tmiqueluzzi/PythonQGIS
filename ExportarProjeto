## temporario

from qgis.core import (
    QgsVectorLayer,
    QgsVectorFileWriter,
    QgsProject,
    QgsFields,
    QgsField,
    QgsWkbTypes
)
from qgis.PyQt.QtCore import QVariant
import os

# Definir o caminho da pasta e do arquivo GPKG
pasta_X = r"C:\Users\theom\Documents\Teste Python"
os.makedirs(pasta_X, exist_ok=True)  # Garante que a pasta existe

saida_gpkg = os.path.join(pasta_X, "teste_python3.gpkg")
saida_txt = os.path.join(pasta_X, "relatorio.txt")  # Arquivo de relat√≥rio

# Criar uma camada vetorial tempor√°ria com um atributo 'id'
camada_temporaria = QgsVectorLayer(
    "None",
    "camada_vazia",
    "memory"
)

camada_temporaria.dataProvider().addAttributes([QgsField("id", QVariant.Int)])
camada_temporaria.updateFields()

# Configura√ß√£o para salvar a camada dentro do GPKG
options = QgsVectorFileWriter.SaveVectorOptions()
options.fileEncoding = "UTF-8"
options.layerName = "camada_vazia"
options.actionOnExistingFile = QgsVectorFileWriter.CreateOrOverwriteFile  # Cria novo ou sobrescreve

# Exportar camada para GeoPackage
erro = QgsVectorFileWriter.writeAsVectorFormatV2(
    camada_temporaria,
    saida_gpkg,
    QgsProject.instance().transformContext(),
    options
)

# Verificar se o arquivo foi criado corretamente
if erro[0] == QgsVectorFileWriter.NoError and os.path.exists(saida_gpkg):
    print(f"‚úÖ GeoPackage criado com sucesso: {saida_gpkg}")
else:
    print(f"‚ùå Falha ao criar o GeoPackage! C√≥digo do erro: {erro[0]}")


# Obter todas as camadas do projeto
projeto = QgsProject.instance()
camadas = projeto.mapLayers().values()

# Lista para armazenar nomes de camadas que n√£o s√£o vetoriais
camadas_nao_vetoriais = []

# Processar cada camada no projeto
for camada in camadas:
    if isinstance(camada, QgsVectorLayer):  # Processo A: Se for vetorial
        nome_da_camada = camada.name()
        print(f"üîπ Exportando camada vetorial: {nome_da_camada}")

        # Configura√ß√£o para salvar no GeoPackage
        options = QgsVectorFileWriter.SaveVectorOptions()
        options.fileEncoding = "UTF-8"
        options.layerName = nome_da_camada
        options.actionOnExistingFile = QgsVectorFileWriter.CreateOrOverwriteLayer  # Adiciona camadas no GPKG

        # Tentar exportar a camada
        erro = QgsVectorFileWriter.writeAsVectorFormatV2(
            camada,
            saida_gpkg,
            QgsProject.instance().transformContext(),
            options
        )

        if erro[0] == QgsVectorFileWriter.NoError:
            print(f"‚úÖ {nome_da_camada} adicionada ao GeoPackage.")
        else:
            print(f"‚ùå Erro ao exportar {nome_da_camada}: C√≥digo {erro[0]}")

    else:  # Processo B: Se n√£o for vetorial, adicionar √† lista de exclus√£o
        camadas_nao_vetoriais.append(camada.name())

# Exibir relat√≥rio final
print("\nüìå Relat√≥rio Final:")
if camadas_nao_vetoriais:
    print("As seguintes camadas **n√£o s√£o vetoriais** e n√£o foram exportadas:")
    for nome in camadas_nao_vetoriais:
        print(f"‚ùå {nome}")
else:
    print("Todas as camadas eram vetoriais e foram exportadas com sucesso. üéâ")
